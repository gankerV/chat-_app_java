package chat_system;

import java.sql.SQLException;

import javax.swing.JOptionPane;

import chat_system.dao.UserAccountDAO;
import chat_system.dto.UserAccount;

public class UpdateAccount extends javax.swing.JPanel {
    private UserAccount currentUser;
    
        public UpdateAccount(UserAccount user) {
            this.currentUser = user;
            initComponents();
            loadUserInfo();
        }
    
        // Hiển thị thông tin user lên giao diện
        private void loadUserInfo() {
            txtUser.setText(currentUser.getUsername());
            txtFullName.setText(currentUser.getFullname());
            txtEmail.setText(currentUser.getEmail());
            txtAddress.setText(currentUser.getAddress());
            txtDOB.setText(currentUser.getDob());
            txtGender.setText(currentUser.getGender());
        }
    
        public void register() {
            txtUser.grabFocus();
        }
    
        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtUser = new swing.MyTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        save_changes_profile = new swing.MyButton();
        txtEmail = new swing.MyTextField();
        jLabel5 = new javax.swing.JLabel();
        update_pass = new swing.MyButton();
        jLabel6 = new javax.swing.JLabel();
        txtFullName = new swing.MyTextField();
        jLabel7 = new javax.swing.JLabel();
        txtAddress = new swing.MyTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDOB = new swing.MyTextField();
        txtGender = new swing.MyTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtPass = new swing.MyPassword();

        setBackground(new java.awt.Color(255, 255, 255));

        txtUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserActionPerformed(evt);
            }
        });

        jLabel1.setText("User Name");

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(69, 68, 68));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Profile");

        save_changes_profile.setBackground(new java.awt.Color(255, 0, 0));
        save_changes_profile.setForeground(new java.awt.Color(40, 40, 40));
        save_changes_profile.setText("Save Changes");
        save_changes_profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_changes_profileActionPerformed(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        jLabel5.setText("Email");

        update_pass.setBackground(new java.awt.Color(255, 0, 0));
        update_pass.setForeground(new java.awt.Color(40, 40, 40));
        update_pass.setText("Change Password");
        update_pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_passActionPerformed(evt);
            }
        });

        jLabel6.setText("Full Name");

        txtFullName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFullNameActionPerformed(evt);
            }
        });

        jLabel7.setText("Address");

        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        jLabel8.setText("Date Of Birth");

        txtDOB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOBActionPerformed(evt);
            }
        });

        txtGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGenderActionPerformed(evt);
            }
        });

        jLabel9.setText("Gender");

        jLabel10.setText("New Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(87, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1)
                    .addComponent(txtUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                    .addComponent(save_changes_profile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(update_pass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addComponent(txtFullName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7)
                    .addComponent(txtAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8)
                    .addComponent(txtDOB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtGender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(txtPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(save_changes_profile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(update_pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );
    }// </editor-fold>//GEN-END:initComponents
    
        
        private void save_changes_profileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_changes_profileActionPerformed
            // TODO add your handling code here:
            // Lấy EMAIL từ giao diện
            String email = currentUser.getEmail();
            
            // Lấy ID từ EMAIL trước
            String userId = null;
            try {
                userId = new UserAccountDAO().getUserIdByEmail(email); // Lấy ID từ email
                if (userId == null) {
                    JOptionPane.showMessageDialog(this, "User not found. Please try again.");
                    return; // Dừng lại nếu không tìm thấy người dùng
                }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error retrieving user ID. Please try again.");
                return; // Dừng lại nếu có lỗi khi lấy ID
            }
            // Kiểm tra định dạng email
            if (!txtEmail.getText().matches("^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$")) {
                JOptionPane.showMessageDialog(this, "Email mới không hợp lệ.");
                return;
            }

            // Kiểm tra định dạng địa chỉ
            if (!txtAddress.getText().matches(".*\\d+.*") || !txtAddress.getText().matches(".*[a-zA-Z]+.*")) {
                JOptionPane.showMessageDialog(this, "Địa chỉ không hợp lệ. Vui lòng bao gồm số nhà và tên đường.");
                return;
            }

            // Kiểm tra định dạng ngày sinh
            if (!txtDOB.getText().matches("^\\d{4}-\\d{2}-\\d{2}$")) {
                JOptionPane.showMessageDialog(this, "Ngày sinh không hợp lệ. Định dạng yêu cầu: yyyy-MM-dd.");
                return;
            }

            // Kiểm tra giá trị giới tính
            if (!txtGender.getText().equalsIgnoreCase("M") && !txtGender.getText().equalsIgnoreCase("F")) {
                JOptionPane.showMessageDialog(this, "Giới tính không hợp lệ. Vui lòng nhập 'M' cho Nam hoặc 'F' cho Nữ.");
                return;
            }
            // Lấy thông tin đã chỉnh sửa từ giao diện
            currentUser.setUsername(txtUser.getText());
            currentUser.setEmail(txtEmail.getText());
            currentUser.setFullname(txtFullName.getText());
            currentUser.setAddress(txtAddress.getText());
            currentUser.setDob(txtDOB.getText());
            currentUser.setGender(txtGender.getText());
    
            // Gọi DAO để cập nhật vào database
            UserAccountDAO userDAO = new UserAccountDAO();
            boolean success = userDAO.updateUser(currentUser, userId);
    
            if (success) {
                JOptionPane.showMessageDialog(this, "Profile updated successfully!");
                
                // Sau khi cập nhật thành công, cần cập nhật lại currentUser với thông tin mới nhất
                // Lấy lại thông tin người dùng từ database sau khi cập nhật
                UserAccount updatedUser = userDAO.getUserByEmail(txtEmail.getText()); // Lấy lại thông tin từ DB
                System.out.println("Updated User: " + updatedUser);
                this.currentUser = updatedUser;  // Cập nhật lại đối tượng currentUser
            } else {
                JOptionPane.showMessageDialog(this, "Failed to update profile. Please try again.");
            }
    }//GEN-LAST:event_save_changes_profileActionPerformed

    private void update_passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_passActionPerformed
        // TODO add your handling code here:
        UserAccountDAO dao = new UserAccountDAO();
        String email = txtEmail.getText();
        String newPassword = new String(txtPass.getPassword());

        if (dao.updatePassword(email, newPassword)) {
            JOptionPane.showMessageDialog(null, "Update password successfully.");

        } else {
            JOptionPane.showMessageDialog(null, "Failed to update password. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    
    }//GEN-LAST:event_update_passActionPerformed

    private void txtUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserActionPerformed

    private void txtFullNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFullNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFullNameActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void txtDOBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOBActionPerformed

    private void txtGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGenderActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private swing.MyButton save_changes_profile;
    private swing.MyTextField txtAddress;
    private swing.MyTextField txtDOB;
    private swing.MyTextField txtEmail;
    private swing.MyTextField txtFullName;
    private swing.MyTextField txtGender;
    private swing.MyPassword txtPass;
    private swing.MyTextField txtUser;
    private swing.MyButton update_pass;
    // End of variables declaration//GEN-END:variables
}
